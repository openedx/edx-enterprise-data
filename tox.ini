[tox]
envlist = data-django{32,42}, reporting-django{32,42}

[wheel]
universal = 1

[doc8]
max-line-length = 120

[pep8]
ignore = E266

[pycodestyle]
exclude = .git,.tox,migrations,settings
max-line-length = 120

[pydocstyle]
ignore = D101,D106,D200,D203,D212,D213,D406,D407,D411,D412,D413
match-dir = (?!migrations)

[isort]
line_length = 120
known_edx = 
known_django = django
known_djangoapp = model_utils
known_first_party = enterprise_data,enterprise_reporting, enterprise_data_roles
include_trailing_comma = true
multi_line_output = 3
sections = FUTURE,STDLIB,THIRDPARTY,DJANGO,DJANGOAPP,EDX,FIRSTPARTY,LOCALFOLDER

[pytest]
DJANGO_SETTINGS_MODULE = enterprise_data.settings.test
addopts = --cov enterprise_reporting --cov enterprise_data --cov enterprise_data_roles --cov-report term-missing --cov-report xml
norecursedirs = .* docs requirements node_modules

[testenv]
setenv = 
    DJANGO_SETTINGS_MODULE=enterprise_data.settings.test

[testenv:data-django32]
deps = 
    django32: Django>=3.2,<4.0
    django42: Django>=4.2,<4.3
    data: -r{toxinidir}/requirements/test-master.txt
commands = 
    data: pytest -Wd {posargs} --ignore enterprise_reporting/

[testenv:data-django42]
deps = 
    Django>=4.2,<4.3
    data: -r{toxinidir}/requirements/test-master.txt
commands = 
    data: pytest -Wd {posargs} --ignore enterprise_reporting/

[testenv:reporting-django32]
setenv = 
    DJANGO_SETTINGS_MODULE=enterprise_data.settings.test
deps = 
    Django>=3.2,<4.0
    reporting: -r{toxinidir}/requirements/test-reporting.txt
commands = 
    reporting: pytest -Wd --cov enterprise_reporting --cov-report term-missing --cov-report xml enterprise_reporting/tests

[testenv:reporting-django42]
setenv = 
    DJANGO_SETTINGS_MODULE=enterprise_data.settings.test
deps = 
    Django>=4.2,<4.3
    reporting: -r{toxinidir}/requirements/test-reporting.txt
commands = 
    reporting: pytest -Wd --cov enterprise_reporting --cov-report term-missing --cov-report xml enterprise_reporting/tests

[testenv:quality]
setenv = 
    DJANGO_SETTINGS_MODULE=enterprise_data.settings.test
whitelist_externals = 
    make
    rm
    touch
deps = 
    -r{toxinidir}/requirements/quality.txt
commands = 
    isort --check-only enterprise_data enterprise_data_roles manage.py setup.py
    touch tests/__init__.py
    pylint -j 0 enterprise_data enterprise_data_roles
    rm tests/__init__.py
    pycodestyle enterprise_data enterprise_data_roles
    pydocstyle enterprise_data enterprise_data_roles
